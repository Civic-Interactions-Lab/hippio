"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[635],{29122:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=t(74848),a=t(28453);const r={sidebar_position:2},i="System Block Diagram",o={id:"requirements/system-block-diagram",title:"System Block Diagram",description:"Figure 1. High level design of the AAC Hungry Hippos application.",source:"@site/docs/requirements/system-block-diagram.md",sourceDirName:"requirements",slug:"/requirements/system-block-diagram",permalink:"/hippio/docs/requirements/system-block-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/Civic-Interactions-Lab/hippio/edit/main/documentation/docs/requirements/system-block-diagram.md",tags:[],version:"current",lastUpdatedBy:"Manan Patel",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"System Overview",permalink:"/hippio/docs/requirements/system-overview"},next:{title:"General Requirements",permalink:"/hippio/docs/requirements/general-requirements"}},c={},l=[{value:"Description",id:"description",level:2}];function d(e){const n={h1:"h1",h2:"h2",mermaid:"mermaid",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"system-block-diagram",children:"System Block Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:"classDiagram\n    direction LR\n\n    class Player\n    class AAC_User\n    class Spectator\n\n    class ReactUI {\n        +PhaserPage.tsx\n        +AacInterface.tsx\n        +WebSocketContext.tsx\n    }\n\n    class PhaserGame {\n        +Game.ts\n        +Hippo.ts\n        +PhysicsEngine\n    }\n\n    class EventBus {\n        +InternalEventEmitter\n    }\n\n    class WebSocketServer {\n        +sessionAPI.js\n        +GameLoop_setInterval()\n        +StateManagement_activeFoods_scores()\n    }\n\n    Player --\x3e ReactUI : interacts with\n    AAC_User --\x3e ReactUI : selects food via\n    Spectator --\x3e ReactUI : observes game via\n\n    ReactUI --\x3e EventBus : sends commands\n    PhaserGame --\x3e EventBus : emits events\n    EventBus --\x3e PhaserGame\n    EventBus --\x3e ReactUI\n\n    ReactUI --\x3e WebSocketServer : sends actions\n    WebSocketServer --\x3e ReactUI : broadcasts state\n"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Figure 1"}),". High level design of the AAC Hungry Hippos application."]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Our project is built with a modern, real-time architecture. The frontend, constructed with React and Phaser, is hosted on Vercel. This client-side application is responsible for rendering all user interfaces, including the game lobby, the AAC device, and the Phaser game canvas itself."}),"\n",(0,s.jsx)(n.p,{children:"The backend is a central game server built with Node.js and the ws library, hosted on Railway. This server manages the entire game state, including player scores, positions, and the synchronized spawning and movement of all food items. For production, it uses a PostgreSQL database, also on Railway, to persist session and player data."}),"\n",(0,s.jsx)(n.p,{children:"All real-time communication between the client and server is handled via a persistent WebSocket connection. The client sends user actions (like joining a game or selecting a food), and the server broadcasts the game state back to all connected players, ensuring that everyone's game is perfectly synchronized, even if a player's browser tab becomes inactive."}),"\n",(0,s.jsx)(n.p,{children:"All user types-Player, AAC User, and Spectator connect through the same frontend application, receiving a role-specific experience that is controlled and synchronized by the central backend server."})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(96540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);