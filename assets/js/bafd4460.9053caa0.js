"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6024],{39553:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var i=s(74848),r=s(28453);const t={sidebar_position:4},l="Hippo Game Requirements",o={id:"requirements/features-and-requirements",title:"Hippo Game Requirements",description:"Functional Requirements",source:"@site/docs/requirements/features-and-requirements.md",sourceDirName:"requirements",slug:"/requirements/features-and-requirements",permalink:"/hippio/docs/requirements/features-and-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/Civic-Interactions-Lab/hippio/edit/main/documentation/docs/requirements/features-and-requirements.md",tags:[],version:"current",lastUpdatedBy:"Manan Patel",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"General Requirements",permalink:"/hippio/docs/requirements/general-requirements"},next:{title:"Use-case descriptions",permalink:"/hippio/docs/requirements/use-case-descriptions"}},c={},a=[{value:"Functional Requirements",id:"functional-requirements",level:2},{value:"Core Gameplay",id:"core-gameplay",level:3},{value:"AAC Game Conductor Role",id:"aac-game-conductor-role",level:3},{value:"Object Types",id:"object-types",level:3},{value:"Scoring &amp; Feedback",id:"scoring--feedback",level:3},{value:"Spectator Mode",id:"spectator-mode",level:3},{value:"Facilitator/Admin Features",id:"facilitatoradmin-features",level:2},{value:"Research &amp; Data Logging",id:"research--data-logging",level:2},{value:"Non-Functional Requirements",id:"non-functional-requirements",level:2},{value:"Accessibility",id:"accessibility",level:3},{value:"Usability",id:"usability",level:3},{value:"Performance",id:"performance",level:3},{value:"Reliability",id:"reliability",level:3},{value:"Maintainability",id:"maintainability",level:3}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"hippo-game-requirements",children:"Hippo Game Requirements"}),"\n",(0,i.jsx)(n.h2,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,i.jsx)(n.h3,{id:"core-gameplay",children:"Core Gameplay"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The game must allow up to ",(0,i.jsx)(n.strong,{children:"4 Hippo players"}),", each positioned at one edge of the screen (top, bottom, left, right)."]}),"\n",(0,i.jsxs)(n.li,{children:["Hippos must be able to ",(0,i.jsx)(n.strong,{children:"slide along their edge"})," (left-right for horizontal edges, up-down for vertical edges)."]}),"\n",(0,i.jsxs)(n.li,{children:["Hippos can ",(0,i.jsx)(n.strong,{children:"catch Food and traps"})," launched during the game."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Food and traps must be visually distinct"})," with clear icons."]}),"\n",(0,i.jsxs)(n.li,{children:["Food spawning must be ",(0,i.jsx)(n.strong,{children:"continuous"})," to ensure smooth gameplay."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fairness"}),": Food spawning logic must ensure all players have ",(0,i.jsx)(n.strong,{children:"equal opportunities"})," to catch the AAC-selected food."]}),"\n",(0,i.jsxs)(n.li,{children:["Food may spawn from ",(0,i.jsx)(n.strong,{children:"different points"})," on the map (not just the center) for variety."]}),"\n",(0,i.jsxs)(n.li,{children:["Presenter/Spectator view must ",(0,i.jsx)(n.strong,{children:"mirror the hippo player view"})," to support joint attention."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"aac-game-conductor-role",children:"AAC Game Conductor Role"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.strong,{children:"AAC (Augmentative and Alternative Communication) user"})," acts as the ",(0,i.jsx)(n.strong,{children:"Game Conductor"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The AAC user must be able to:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Choose the ",(0,i.jsx)(n.strong,{children:"type of food or trap"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Launch"})," the selected object into the play area."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.strong,{children:"verbs and modifiers"}),' such as "eat," "don\u2019t eat," "more" to create simple commands.']}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The AAC board must:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Provide ",(0,i.jsx)(n.strong,{children:"audio feedback (speech output)"})," for every button press."]}),"\n",(0,i.jsxs)(n.li,{children:["Support ",(0,i.jsx)(n.strong,{children:"customizable categories"})," to limit options (e.g., max ~10 visible items)."]}),"\n",(0,i.jsxs)(n.li,{children:["Be optimized for ",(0,i.jsx)(n.strong,{children:"touchscreen use"})," with large buttons and simple folder navigation."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"object-types",children:"Object Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Food"})," is catchable for points."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Traps"})," (burn, freeze, grow) negatively affect Hippos."]}),"\n",(0,i.jsxs)(n.li,{children:["Catching the wrong food or trap should trigger ",(0,i.jsx)(n.strong,{children:"visual and audio effects"}),' (e.g., a hippo "freeze" animation for freeze verb).']}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"scoring--feedback",children:"Scoring & Feedback"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Hippos earn points for ",(0,i.jsx)(n.strong,{children:"catching correct food"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Provide ",(0,i.jsx)(n.strong,{children:"fun, animated feedback"})," for events (catch, trap effects)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Leaderboard"})," must be ",(0,i.jsx)(n.strong,{children:"visual"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.strong,{children:"hippo colors, icons, or progress bars"})," instead of text labels or numbers."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Game must have a clear ",(0,i.jsx)(n.strong,{children:"progress indicator or game over screen"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"spectator-mode",children:"Spectator Mode"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.strong,{children:"spectator mode"})," must allow observers to watch gameplay in real time."]}),"\n",(0,i.jsxs)(n.li,{children:["Spectators should see:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Player hippos"}),"\n",(0,i.jsx)(n.li,{children:"Current food/trap state"}),"\n",(0,i.jsx)(n.li,{children:"Visual leaderboard"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"facilitatoradmin-features",children:"Facilitator/Admin Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Provide a ",(0,i.jsx)(n.strong,{children:"facilitator panel"})," to:"]}),"\n",(0,i.jsxs)(n.li,{children:["Pre-configure ",(0,i.jsx)(n.strong,{children:"game rooms"})," with specific settings."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"research--data-logging",children:"Research & Data Logging"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The game must ",(0,i.jsx)(n.strong,{children:"log key actions with timestamps"}),", including:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'AAC user selections (e.g., "User clicked Apple").'}),"\n",(0,i.jsx)(n.li,{children:"Player catches (correct/wrong food)."}),"\n",(0,i.jsx)(n.li,{children:"Trap interactions."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Logs should be stored in the database (",(0,i.jsx)(n.strong,{children:"Postgres"}),") and be ",(0,i.jsx)(n.strong,{children:"exportable (CSV/JSON)"})," for research use."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"non-functional-requirements",children:"Non-Functional Requirements"}),"\n",(0,i.jsx)(n.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Autism-friendly design:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low sensory load"}),": plain, non-distracting background."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High contrast"})," between hippos, food, and background."]}),"\n",(0,i.jsxs)(n.li,{children:["Optional ",(0,i.jsx)(n.strong,{children:"muted/low-sound mode"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["AAC interface must be ",(0,i.jsx)(n.strong,{children:"simple, large-buttoned, and optimized for touchscreens"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Game ",(0,i.jsx)(n.strong,{children:"mode and role selection must be icon-based"}),", avoiding text or dropdown menus."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"usability",children:"Usability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Must work on ",(0,i.jsx)(n.strong,{children:"desktop, laptop, or tablet"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Controls must be ",(0,i.jsx)(n.strong,{children:"intuitive for touchscreens and desktops"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Touchscreen: swipe or large on-screen buttons."}),"\n",(0,i.jsxs)(n.li,{children:["Desktop: arrow keys ",(0,i.jsx)(n.strong,{children:"or alternative visual controls"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["UI must ",(0,i.jsx)(n.strong,{children:"minimize text"})," where possible, relying on ",(0,i.jsx)(n.strong,{children:"icons and colors"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Game must run ",(0,i.jsx)(n.strong,{children:"smoothly (\u2265 30 FPS)"})," even with multiple objects on screen."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.strong,{children:"real-time synchronization"})," via WebSockets with ",(0,i.jsx)(n.strong,{children:"movement interpolation"})," to reduce jitter."]}),"\n",(0,i.jsx)(n.li,{children:"Physics (bounce, expiration, collisions) must remain accurate and lightweight."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"reliability",children:"Reliability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Game state must ",(0,i.jsx)(n.strong,{children:"not crash or freeze"})," during normal play."]}),"\n",(0,i.jsxs)(n.li,{children:["Players should be able to ",(0,i.jsx)(n.strong,{children:"reconnect"})," without breaking game state."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"maintainability",children:"Maintainability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Code must be ",(0,i.jsx)(n.strong,{children:"modular and well-structured"}),", especially for:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Movement strategies"}),"\n",(0,i.jsx)(n.li,{children:"Food/trap spawning logic"}),"\n",(0,i.jsx)(n.li,{children:"AAC interface"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Include ",(0,i.jsx)(n.strong,{children:"unit tests"})," for critical features (movement, spawning, scoring, WebSocket state sync)."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);